{
    "plugins": {
        "InsecureIntegerArithmetic": {
            "active": "false",
            "swcID": "SWC-101",
            "description": [
                {
                    "head": "",
                    "tail": ""
                }
            ]
        },
        "LockPragma": {
            "active": "true",
            "swcID": "SWC-103",
            "description": [
                {
                    "head": "A floating pragma is set.",
                    "tail": "It is recommended to make a conscious choice on what version of Solidity is used for compilation. Currently any version equal or grater than {0} is allowed."
                }
            ]
        },
        "OutdatedCompilerVersion": {
            "active": "true",
            "swcID": "SWC-102",
            "description": [
                {
                    "head": "An outdated compiler version is used.",
                    "tail": "The version of the compiler specified in the Pragma {0} is outdated. It is recommended to use a more recent version (>=0.4.23). For more information on Solidity compiler bug reports and fixes check https://github.com/ethereum/solidity/releases."
                }
            ]
        },
        "DefaultVisibilityFunction": {
            "active": "true",
            "swcID": "SWC-100",
            "description": [
                {
                    "head": "The function visibility is not set.",
                    "tail": "The function {0} does not have an explicit visibility set. The default visibility is set to public and anyone call the function."
                }
            ]
        },
        "DefaultVisibilityStateVariable": {
            "active": "true",
            "swcID": "SWC-108",
            "description": [
                {
                    "head": "The state variable visibility is not set.",
                    "tail": "It is best best practice to set the visibility of state variables explicitly. The default visibility for {0} is internal. Other possible visibility values are public and private."
                }
            ]
        },

        "UndeclaredStoragePointer": {
            "active": "true",
            "swcID": "SWC-109",
            "description": [
                {
                    "head": "Dangerous use of uninitialized storage variables.",
                    "tail": "Uninitialized storage variables of user-defined type can point to unexpected storage locations."
                }
            ]
        },
        "DeprecatedFunctions": {
            "active": "true",
            "swcID": "SWC-111",
            "description": [
                {
                    "head": "",
                    "tail": "Using _constant_ as a function state mutability modifier is disallowed as of Solidity version 0.5.0 use _view_ instead."
                },
                {
                    "head": "",
                    "tail": "_sha3()_ is disallowed as of Solidity version 0.5.0, use _keccak256()_ instead."
                },
                {
                    "head": "",
                    "tail": "_suicide()_ is disallowed as of Solidity version 0.5.0, use _selfdestruct()_ instead."
                },
                {
                    "head": "",
                    "tail": "_callcode()_ is disallowed as of Solidity version 0.5.0, use _delegatecall()_ instead."
                },
                {
                    "head": "",
                    "tail": "_block.blockhash_ is deprecated and _blockhash()_ should be used instead."
                },
                {
                    "head": "",
                    "tail": "_gasleft()_ is disallowed as of Solidity version 0.5.0, use _msg.gas_ instead. "
                },
                {
                    "head": "",
                    "tail": "_throw_ is now disallowed as of Solidity version 0.5.0 in favor of _revert_, _require_ and _assert_"
                }
            ]
        },
        "UncheckedCallReturnValue": {
            "active": "true",
            "swcID": "SWC-104",
            "description": [
                {
                    "head": "",
                    "tail": "Always check the return value for low level calls like call(), send() and delegatecall()."
                }
            ]
        },
        "IncorrectConstructorName": {
            "active": "true",
            "swcID": "SWC-118",
            "description": [
                {
                    "head": "",
                    "tail": "Until Solidity version 0.4.21 a constructor can only be defined as a function that has the same name as the contract {0}. It has been found that there is a function with a very similar name {1} that only deviates based lower/upper case characters."
                },
                {
                    "head": "",
                    "tail": "Since Solidity version 0.4.22 there is a special constructor keyword available that explicitly declares the constructor of a contract. It has been found that a function definition incorrectly uses the constructor keyword which indicates an incorrect constructor declaration. "
                }
            ]
        },
        "AuthorizationTXOrigin": {
            "active": "true",
            "swcID": "SWC-118",
            "description": [
                {
                    "head": "",
                    "tail": "Using tx.origin as a security control can lead to authorization bypass vulnerabilities. Accessing the origin information has been discovered in a conditional statement. "
                }
            ]
        },
        "WeakRandomnessFunction": {
            "active": "true",
            "swcID": "SWC-120",
            "description": [
                {
                    "head": "",
                    "tail": "Using past or the current block hashes as a source of randomness is predictable. The issue can be ignored if this is unrelated to randomness or if the usage is related to a secure implementation of a commit/reveal scheme."
                }
            ]
        },
        "TypoGraphicalErrorFunction": {
            "active": "true",
            "swcID": "SWC-129",
            "description": [
                {
                    "head": "",
                    "tail": "An unary operation was disovered directly after an assignment operation."
                }
            ]
        },
        "IncorrectInheritanceOrderFunction": {
            "active": "true",
            "swcID": "SWC-125",
            "description": [
                {
                    "head": "",
                    "tail": "The following functions were detected to exist in the contract and its base classes."
                }
            ]
        }
    }
}
